#+TITLE: Darkstar
#+AUTHOR: Chris Maiorana
#+SUBTITLE: A simple configuration for Emacs.
#+PROPERTY: header-args :tangle "~/.emacs"

* How to use this file

Welcome to your first Emacs configuration.  Or, maybe it's not your first, but we will pretend that it is, because this is a good starting point.  "Darkstar" is a minimalist configuration for Emacs that you can expand upon as needed, or use as is.  It's called "Darkstar" because that's a cool name.

To run this file, or "install" it, you just need to hit ~C-c C-v t~ to "tangle" the Emacs lisp contents to the ~~/.emacs~ file in your home directory.  This will be your "init" file.  That's right.

Once done, you can throw the whole "darkstar" folder into the trash and make future edits to the ~.emacs~ file directly, or you can edit this Org Mode file and re-tangle.  Whatever you want!

* Package Archives

You will need to install some packages.  So, this declaration here will include the necessary package archives and install ~use-package~, an essential package that can automatically install other packages.

#+begin_src elisp
(require 'package)
(setq package-archives '(("melpa" . "https://melpa.org/packages/")
                       ("nongnu" . "https://elpa.nongnu.org/nongnu/")
                       ("elpa" . "https://elpa.gnu.org/packages/")))
(package-initialize)
(unless package-archive-contents
(package-refresh-contents))
(unless (package-installed-p 'use-package)
  (package-install 'use-package))
(require 'use-package)
(setq use-package-always-ensure t)
#+end_src

We're off to a good start here.  Let's keep going.

* Navigation and completion

The ~vertico~ and ~orderless~ packages are essential for completion purposes.  Vertico will present you with minibuffer suggestions of files and directories and functions, and pretty much everything.  The "orderless" completion functions will match any part of a file or function, to make it easier to find anything and everything.

#+begin_src elisp
(use-package vertico :ensure t :init (vertico-mode))

(use-package orderless
:ensure t
:custom
(completion-styles '(orderless basic))
(completion-category-overrides '((file (styles basic partial-completion)))))
#+end_src

Adding on to that, ~consult~ gives you fancy, asynchronous search capabilities that will just blow your Emacs user experience into a whole new world.  You need this:

#+begin_src elisp
  (use-package consult
    :ensure t
    :bind (
           ("M-s b" . consult-buffer)
           ("M-s g" . consult-grep)
	     ("M-s j" . consult-outline)
           ))
#+end_src

* Window dressing

Here I get a little opinionated, just for fun. These are a few aesthetic choices I rather enjoy in my Emacs.

#+begin_src elisp
  ;; Set initial major mode to 'org-mode'
  (setq initial-major-mode 'org-mode

        ;; Disable startup message
        inhibit-startup-message t

        ;; Clear the initial scratch message
        initial-scratch-message nil

        ;; Disable backup files
        make-backup-files nil

        ;; Set the frame title format with a palm tree emoji
        frame-title-format (list "ðŸŒ´ %b")

        ;; Set Dired listing switches for more minimalist output
        dired-listing-switches "-aghov --group-directories-first")

  ;; Disable the menu bar
  (menu-bar-mode -1)

  ;; Disable the tool bar
  (tool-bar-mode -1)

  ;; Disable the scroll bar
  (scroll-bar-mode -1)

  ;; Maximize the frame on startup
  (toggle-frame-maximized)
#+end_src

* Some important Org Mode commands and configuration

This configuration is meant to be minimal.  But you need some basic Org Mode commands in place, even if you're not going to be using the Org agenda or some of the fancier features in Org Mode, I'd go ahead and add this now: 

#+begin_src elisp
(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cc" 'org-capture)
(global-set-key "\C-cb" 'org-switchb)
(global-set-key "\C-ct" 'org-todo-list)
(require 'org-id) ; for creating ids
(require 'org-tempo) ; for template expansion
#+end_src

That's it.  We have reached the end of the file.

* Special thanks and attribution

Rainer Koenig. David Wilson. Protesilaos Stavrou.
